<?xml version="1.0" ?>
<project name="x-ends-mtskr8-acetal" default="compile-scad-to-stl" xmlns:fl="antlib:it.haefelinger.flaka">
<!--
	ANT Build script for OpenSCAD.

	Copyright 2012, Free Beachler, Terawatt Industries, Longevity Software LLC

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
    <!-- initialize some props -->
    <property name="proj" value="x-ends-mtskr8-acetal" />
    <property name="build-tools-dir-name" value="tools/build" />
    <property name="src-dir" value="${basedir}/src" />
    <property name="dist-dir" value="${basedir}/dist" />

    <tstamp>
        <format property="DATE_STAMP" pattern="yyyy-MM-dd" />
    	<format property="DATETIME_STAMP" pattern="yyyy-MM-dd_HHmm" />
    </tstamp>

    <!-- read props file -->
	<condition property="isUnix" value="unix." else="">
      <os family="unix" />
    </condition>
    <property file="${isUnix}settings.properties" />
	<echo message="Load property file: ${isUnix}settings.properties" />
    <fl:install-property-handler />
    <!-- load profile -->
	<condition property="profile-id" value="${profileId}" else="idler-acetal">
		<isset property="profileId" />
	</condition>
	<typedef name="loadBuildProfile" classname="com.longevitysoft.ant.ProfilePropertyBuilder">
		<classpath>
			<pathelement location="${basedir}/${build-tools-dir-name}/lsoft-ant-tasks-0.1-20120804.jar" />
		</classpath>
	</typedef>

	<target name="load-profile-properties" description="load build profiles xml as ant properties">
		<loadBuildProfile xmlFile="${build-tools-dir-name}/build_profiles.xml" profileId="${profile-id}" />
	</target>

	<target name="pkg-source-files" description="TAR and GZIP the /src fileset">
		<property name="tar-filename"  value="${dist-dir}/${proj}-source"/>

        <delete file="${tar-filename}.tar" failonerror="true" />
        <delete file="${tar-filename}.tgz" failonerror="true" />
        <echo message="Pkg files..." />
        <tar destfile="${tar-filename}.tar">
            <tarfileset dir="./src/" prefix="">
                <exclude name="**/*.svn" />
                <exclude name="**/*.git" />
                <exclude name="**/*.hg" />
                <exclude name="**/*.tar" />
                <exclude name="**/*.tgz" />
                <exclude name="**/*.zip" />
            </tarfileset>
        </tar>

        <gzip src="${tar-filename}.tar" destfile="${tar-filename}.tgz" />
        <echo message="done pkg" />
	</target>

	<target name="pkg-dist-files" description="TAR and GZIP the /dist fileset">
		<property name="tar-filename"  value="${dist-dir}/${proj}-dist"/>
        
        <delete file="${tar-filename}.tar" failonerror="true" />
        <delete file="${tar-filename}.tgz" failonerror="true" />
        <echo message="Pkg files..." />
        <tar destfile="${tar-filename}.tar">
            <tarfileset dir="${dist-dir}/" prefix="">
                <exclude name="**/*.svn" />
                <exclude name="**/*.git" />
                <exclude name="**/*.hg" />
                <exclude name="**/*.tar" />
                <exclude name="**/*.tgz" />
                <exclude name="**/*.zip" />

                <include name="**/*.stl" />
                <include name="**/*.png" />
            </tarfileset>
        </tar>
        
        <gzip src="${tar-filename}.tar" destfile="${tar-filename}.tgz" />
        <echo message="done pkg" />
	</target>

    <target name="zip-dist-files" depends="pkg-dist-files" description="ZIP the TAR distribution">
		<property name="tar-filename" value="${dist-dir}/${proj}-dist"/>
        <zip destfile="${dist-dir}/x_ends_misumi.zip">
            <tarfileset src="${tar-filename}.tar"/>
        </zip>
    </target>

    <target name="clean_dist">
        <delete dir="./${dist-dir}"/>
        <mkdir dir="./${dist-dir}"/>
    </target>

	<target name="compile-scad-to-stl" description="compile src/*.scad -> dist/*.stl">
        <fl:let>
            d = file('./src');
        </fl:let>
        <fl:for var="name" in="d.list">
            <fl:switch value="#{name}">
                <re expr="^(\./src)(.*)\.scad" var="m">
                <echo message="compiling #{m} to STL :: " />
                <exec executable="${exec.path.oscad}">
                    <arg line="-o ${dist-dir}/#{m[2]}.stl" />
                    <arg line="-D 'quality=&quot;production&quot;'" />
                    <arg line="#{m}" />
                </exec>
                </re>
            </fl:switch>
        </fl:for>
    </target>

	<target name="--clean-filtered-scad" description="scrub filtered code files">
		<delete file="${src-dir}/ant_assembly.scad" />
	</target>

	<target name="build-filtered-assembly-scad" depends="--clean-filtered-scad,load-profile-properties" description="build the filtered scad code to assemble multiple parts">
        <property name="scad-assembly" value="${src-dir}/ant_assembly.scad" />
        <property name="scad-assembly-template" value="${basedir}/tools/build/ant_assembly.scad.tpl" />
		<echo message="filtering code for the '${profile-id}' profile ..." />
        <copy file="${scad-assembly-template}" tofile="${scad-assembly}"/>
        <replace file="${scad-assembly}" token="!scad.method!" value="${method}" />
        <replace file="${scad-assembly}" token="!scad.part!" value="${part}" />
        <replace file="${scad-assembly}" token="!scad.mode!" value="${mode}" />
        <replace file="${scad-assembly}" token="!scad.bearing!" value="${bearing}" />
        <replace file="${scad-assembly}" token="!scad.zstop!" value="${zstop}" />
        <echo message="compile assembly -> STL ..." />
        <exec executable="${exec.path.oscad}">
            <arg line="-o ${dist-dir}/${output-file}.stl" />
            <arg line="-D 'quality=&quot;production&quot;'" />
            <arg line="${scad-assembly}" />
        </exec>
        <echo message="cleanup assembly template ..." />
        <delete file="${scad-assembly}"/>
        <echo message="done" />
        
	</target>

</project>
